---
import BaseLayout from "../layouts/BaseLayout.astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import Particles from "astro-particles"
import type { ISourceOptions } from "tsparticles-engine";

const options: ISourceOptions = {
   fullScreen: {
    enable: false,
   },
    particles: {
    number: {
      value: 50,
      density: {
        enable: true,
        value_area: 800
      }
    },
    color: {
      value: "#780ecf"
    },
    opacity: {
      value: 0.5,
      random: false,
      anim: {
        enable: false,
        speed: 1,
        opacity_min: 0.1,
        sync: false
      }
    },
    size: {
      value: 3,
      random: true,
      anim: {
        enable: false,
        speed: 20,
        size_min: 0.1,
        sync: false
      }
    },
    line_linked: {
      enable: true,
      distance: 150,
      color: "#c470db",
      opacity: 0.4,
      width: 1
    },
    move: {
      enable: true,
      speed: 3,
      direction: "none",
      random: false,
      straight: false,
      out_mode: "out",
      bounce: false,
      attract: {
        enable: false,
        rotateX: 600,
        rotateY: 1200
      }
    }
  },
  interactivity: {
    detect_on: "canvas",
    events: {
      onhover: {
        enable: true,
        mode: "grab"
      },
      onclick: {
        enable: true,
        mode: "push"
      },
      resize: true
    },
    modes: {
      grab: {
        distance: 140,
        line_linked: {
          opacity: 1
        }
      },
      bubble: {
        distance: 400,
        size: 40,
        duration: 2,
        opacity: 8,
        speed: 3
      },
      repulse: {
        distance: 200,
        duration: 0.4
      },
      push: {
        particles_nb: 4
      },
      remove: {
        particles_nb: 2
      }
    }
  },
  retina_detect: true
};

const posts = (await Astro.glob("./project-files/*.{md,mdx}")).sort(
  (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const blogs = (await Astro.glob("./blog/*.{md,mdx}")).sort(
  (a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf()
);

const last_posts = posts.slice(0, 3);
const last_blogs = blogs.slice(0, 3);
---

<script src="https://cdn.jsdelivr.net/npm/@tsparticles/preset-links@3/tsparticles.preset.links.min.js" is:inline></script>
<script>
  import { type Container, type Engine, tsParticles } from "tsparticles-engine";
    import { loadFull } from "tsparticles";

    // the function name is the parameter passed to the init attribute
    // required
    // add the function to window is mandatory, it will be searched there
    window.particlesInit = async function (engine: Engine) {
        await loadFull(engine);
    }
    
    // the function name is the parameter passed to the loaded attribute
    // optional
    // add the function to window is mandatory, it will be searched there
    window.particlesLoaded = function (container: Container) {
        console.log("particlesLoaded callback");
    }
</script>

<BaseLayout>
  <div class="simple-grid space-x-1">
    <div class="pb-12 mt-5">
      <div class="text-xl py-1">Hey there ðŸ‘‹</div>
      <div class="text-5xl font-bold inline">I'm <div class="inline text-transparent bg-clip-text bg-gradient-to-r main-gradient word">4A-6F-73-68</div></div>
      <div class="text-3xl py-3 font-bold">Cybersecurity Engineer and Computer Scientist</div>
      <div class="py-2">
        <text class="text-lg">
          I am a cybersecurity engineer at Lockheed Martin and a recent computer science graduate from the University of Central Florida with a Master's in Computer Science. My interests are in cybersecurity, machine learning, evolutionary algorithms, and robotics.
          </text
        >
      </div>
      <div class="flex mt-8">
        <a class="animated-fill button_coder" href="https://www.linkedin.com/in/joshua-gracie/" target="_blank"> Let's connect!</a>
        <a href="/resume.pdf" target="_blank" class="animated-fill button_coder ml-5"> Download my ResumÃ©</a>
      </div>
    </div>
    <div style="position:relative;" id="tsparticles-wraper" class="space-x-0.5">
      <img class="max-w-full square-lg relative" style="z-index:999999!important" src="/CoolSelfie.png" />
      <div id="tsparticles" class="particles"></div>
    </div>
  </div>

  <figure class="quote mt-16 mb-10" style="margin-bottom:3.5rem">
    <blockquote class="quote-text">If a machine is expected to be infallible, <div class="quote-color-text">it cannot also be intelligent.</div></blockquote>
    <figcaption class="quote-author">Alan Turing</figcaption>
  </figure>

  <script is:inline>
    var after = window.getComputedStyle(
        document.querySelector('.quote'), ':after'
    );
    var before = window.getComputedStyle(
        document.querySelector('.quote'), ':before'
    );

    // Loop movement

    var words = ['4A-6F-73-68', 'Josh Gracie'],
    part,
    i = 0,
    offset = 0,
    len = words.length,
    forwards = true,
    skip_count = 0,
    skip_delay = 100,
    speed = 50;
  var wordflick = function () {
    setInterval(function () {
      if (forwards) {
        if (offset >= words[i].length) {
          ++skip_count;
          if (skip_count == skip_delay) {
            forwards = false;
            skip_count = 0;
          }
        }
      }
      else {
        if (offset == 0) {
          forwards = true;
          i++;
          offset = 0;
          if (i >= len) {
            i = 0;
          }
        }
      }
      part = words[i].substr(0, offset);
      if (skip_count == 0) {
        if (forwards) {
          offset++;
        }
        else {
          offset--;
        }
      }
      document.querySelector('.word').innerHTML = part;
    },speed);
    };
    (function() {
      wordflick();

    })();

    // Now use particles.js
  </script>

<div class="section-header-wrapper mt-10">
  <div class="text-3xl font-bold mb-2 section-header">blogs</div>
  <a class="projects_link" href="/blog/1">View all ~~&gt;</a>
</div>

<div class="simple-grid">
{
  last_blogs.map((post) => (
    <HorizontalCard
      title={post.frontmatter.title}
      img={post.frontmatter.heroImage}
      desc={post.frontmatter.description}
      url={post.url}
      tags={post.frontmatter.tags}
      target="_self"
      badge={post.frontmatter.badge}
    />
  ))
}
</div>

    <div class="section-header-wrapper mt-10">
      <div class="text-3xl font-bold mb-2 section-header">projects</div>
      <a class="projects_link" href="/project-files/1">View all ~~&gt;</a>
    </div>
    <div class="simple-grid">
      {
        last_posts.map((post) => (
          <HorizontalCard
            title={post.frontmatter.title}
            img={post.frontmatter.heroImage}
            desc={post.frontmatter.description}
            url={post.url}
            tags={post.frontmatter.tags}
            target="_self"
            badge={post.frontmatter.badge}
          />
        ))
      }
  </div>
  <Particles class="particles" id="tsparticles" options={options} init="particlesInit" />
</BaseLayout>
